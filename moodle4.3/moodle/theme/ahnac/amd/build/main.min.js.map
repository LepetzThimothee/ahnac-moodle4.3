{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript module for managing favorite courses.\n *\n * @module theme_ahnac/main\n * @copyright   2024 Lepetz Thimoth√©e <lepetz.timo@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Notification from 'core/notification';\nimport * as Ajax from 'core/ajax';\n\n/**\n * Set the favourite state on a list of courses.\n *\n * @param {Object} args Arguments send to the webservice.\n * @return {Promise} Resolve with warnings.\n */\nconst setFavouriteCourses = args => {\n    const request = {\n        methodname: 'core_course_set_favourite_courses',\n        args: args\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Set the courses favourite status.\n *\n * @param {Number} courseId Course id to favourite.\n * @param {boolean} status New favourite status.\n * @return {Promise} Repository promise.\n */\nconst setCourseFavouriteState = (courseId, status) => {\n    return setFavouriteCourses({\n        courses: [\n            {\n                'id': courseId,\n                'favourite': status\n            }\n        ]\n    }).then(result => {\n        if (result.warnings.length === 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }).catch(Notification.exception);\n};\n\n/**\n * Handle click event on favorite icon.\n *\n * @param {Event} event Click event object.\n */\nconst handleFavoriteIconClick = (event) => {\n    event.preventDefault(); // Prevent default link behavior\n    const courseId = event.currentTarget.dataset.courseId;\n    const isFavorite = $(event.currentTarget).hasClass('text-yellow'); // Check if the icon has the 'text-yellow' class\n    setCourseFavouriteState(parseInt(courseId), !isFavorite).then(success => {\n        if (success) {\n            $(event.currentTarget).toggleClass('text-yellow text-primary'); // Toggle the classes 'text-yellow' and 'text-primary'\n        } else {\n            Notification.alert('Failed to update course favorite status.');\n        }\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Filters the courses based on the selected tags in the dropdown menus.\n *\n * This function iterates through each course element and determines whether\n * it should be displayed or hidden based on the currently selected filters.\n */\nconst filterCourses = () => {\n    const filters = getSelectedFilters();\n    $('.coursebox').each(function() {\n        const courseId = $(this).data('courseid').toString();\n        const showCourse = shouldShowCourse(courseId, filters);\n        $(this).toggle(showCourse);\n    });\n};\n\n/**\n * Retrieves the selected filters from the dropdown menus.\n *\n * This function gathers the selected options from all dropdown menus with the\n * class 'custom-select' and creates an object mapping keywords to arrays of\n * selected course IDs.\n *\n * @returns {Object} filters - An object where each key is a keyword and each value is an array of course IDs.\n */\nconst getSelectedFilters = () => {\n    const filters = {};\n    $('.custom-select').each(function() {\n        const keyword = $(this).attr('name');\n        const selectedOption = $(this).find('option:selected');\n        const courseIds = selectedOption.data('course-ids');\n        if (courseIds) {\n            filters[keyword] = courseIds.toString().split(',');\n        }\n    });\n    return filters;\n};\n\n/**\n * Determines if a course should be displayed based on the selected filters.\n *\n * This function checks if a given course ID is included in all of the selected\n * filters. If the course ID is not included in any filter, the course will be\n * hidden.\n *\n * @param {string} courseId - The ID of the course to check.\n * @param {Object} filters - An object where each key is a keyword and each value is an array of course IDs.\n * @returns {boolean} - Returns true if the course should be displayed, false otherwise.\n */\nconst shouldShowCourse = (courseId, filters) => {\n    for (const keyword in filters) {\n        if (!filters[keyword].includes(courseId)) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Initialize the functionality of our theme.\n *\n * @method init\n */\nexport const init = () => {\n    $('.favorite-icon').on('click', (event) => handleFavoriteIconClick(event));\n    $('.custom-select').on('change', () => filterCourses());\n    $(function() {\n        filterCourses();\n    });\n};"],"names":["setCourseFavouriteState","courseId","status","args","request","methodname","Ajax","call","setFavouriteCourses","courses","then","result","warnings","length","catch","Notification","exception","filterCourses","filters","getSelectedFilters","each","this","data","toString","showCourse","shouldShowCourse","toggle","keyword","attr","courseIds","find","split","includes","on","event","preventDefault","currentTarget","dataset","isFavorite","hasClass","parseInt","success","toggleClass","alert","handleFavoriteIconClick"],"mappings":";;;;;;;6pCAiDMA,wBAA0B,CAACC,SAAUC,SAhBfC,CAAAA,aAClBC,QAAU,CACZC,WAAY,oCACZF,KAAMA,aAGHG,KAAKC,KAAK,CAACH,UAAU,IAWrBI,CAAoB,CACvBC,QAAS,CACL,IACUR,mBACOC,WAGtBQ,MAAKC,QAC2B,IAA3BA,OAAOC,SAASC,SAKrBC,MAAMC,aAAaC,WA4BpBC,cAAgB,WACZC,QAAUC,yCACd,cAAcC,MAAK,iBACXnB,UAAW,mBAAEoB,MAAMC,KAAK,YAAYC,WACpCC,WAAaC,iBAAiBxB,SAAUiB,6BAC5CG,MAAMK,OAAOF,gBAajBL,mBAAqB,WACjBD,QAAU,6BACd,kBAAkBE,MAAK,iBACfO,SAAU,mBAAEN,MAAMO,KAAK,QAEvBC,WADiB,mBAAER,MAAMS,KAAK,mBACHR,KAAK,cAClCO,YACAX,QAAQS,SAAWE,UAAUN,WAAWQ,MAAM,SAG/Cb,SAcLO,iBAAmB,CAACxB,SAAUiB,eAC3B,MAAMS,WAAWT,YACbA,QAAQS,SAASK,SAAS/B,iBACpB,SAGR,iBAQS,yBACd,kBAAkBgC,GAAG,SAAUC,OA7EJA,CAAAA,QAC7BA,MAAMC,uBACAlC,SAAWiC,MAAME,cAAcC,QAAQpC,SACvCqC,YAAa,mBAAEJ,MAAME,eAAeG,SAAS,eACnDvC,wBAAwBwC,SAASvC,WAAYqC,YAAY5B,MAAK+B,UACtDA,4BACEP,MAAME,eAAeM,YAAY,4BAEnC3B,aAAa4B,MAAM,+CAGxB7B,MAAMC,aAAaC,YAkEqB4B,CAAwBV,6BACjE,kBAAkBD,GAAG,UAAU,IAAMhB,uCACrC,WACEA"}